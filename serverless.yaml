service: facebook-integration
useDotenv: true
#comment
frameworkVersion: '3'

plugins:
  - serverless-dotenv-plugin
  - serverless-prune-plugin
  - serverless-step-functions
  - serverless-plugin-aws-alerts
  - serverless-plugin-split-stacks
  - serverless-python-requirements
  - serverless-plugin-log-retention
  - serverless-plugin-tracing
custom:
  environments:
    test: 'test'
  businessImpact:
    test: 'test'
  prune:
    automatic: true
    includeLayers: true
    number: ${env:PRUNE_NUMBER}
  pythonRequirements:
    dockerizePip: true
    useStaticCache: false 
  serviceTags:
    Managed-by: 'prueba-lambda'
    Team: 'test'
    Country: 'Colombia'
    Owner: 'Leonardo'
  dotenv:
    include: none
package:
  individually: true

provider:
  name: aws
  runtime: python3.10
  runtimeManagement: auto 
  region: ${env:REGION}
  stackName: ${self:service}
  stage: ${opt:stage, 'default'}
  memorySize: 512
  timeout: ${env:TIMEOUT}
  logRetentionInDays: ${env:LOGS_RETENTION_DAYS}
  stackTags: ${self:custom.serviceTags}
resources:
  Resources:
    iamRolParaLambda: ${file(infrastructure/iam/lambda/iamRolParaLambda.yaml):iamRolParaLambda}
    ApiGatewayApiKey:
      Type: AWS::ApiGateway::ApiKey
      Properties:
        Name: FacebookApiKey
        Enabled: true
        StageKeys:
          - RestApiId: ${self:provider.httpApi.id}
            StageName: $default

    ApiGatewayUsagePlan:
      Type: AWS::ApiGateway::UsagePlan
      Properties:
        UsagePlanName: FacebookUsagePlan
        ApiStages:
          - ApiId: ${self:provider.httpApi.id}
            Stage: $default
        Throttle:
          RateLimit: 10  # Máximo 10 requests por segundo
          BurstLimit: 20
        Quota:
          Limit: 1000  # Máximo 1000 requests por mes
          Period: MONTH
        ApiKeyId: !Ref ApiGatewayApiKey
functions:
  - ${file(infrastructure/lambdas/funcion.yaml)}


