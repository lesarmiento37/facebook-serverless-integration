service: facebook-integration
useDotenv: true
frameworkVersion: '3'

plugins:
  - serverless-dotenv-plugin
  - serverless-prune-plugin
  - serverless-step-functions
  - serverless-plugin-aws-alerts
  - serverless-plugin-split-stacks
  - serverless-python-requirements
  - serverless-plugin-log-retention
  - serverless-plugin-tracing

custom:
  environments:
    test: 'test'
  businessImpact:
    test: 'test'
  prune:
    automatic: true
    includeLayers: true
    number: ${env:PRUNE_NUMBER}
  pythonRequirements:
    dockerizePip: true
    useStaticCache: false 
  serviceTags:
    Managed-by: 'prueba-lambda'
    Team: 'test'
    Country: 'Colombia'
    Owner: 'Leonardo'
  dotenv:
    include: none

package:
  individually: true

provider:
  name: aws
  apiGateway:
    apiKeys:
      - name: leonardoKey
        value: leonardoValue12345678910111213141516
    usagePlan:
      quota:
        limit: 5000
        offset: 2
        period: MONTH
      throttle:
        burstLimit: 200
        rateLimit: 100
  runtime: python3.10
  region: ${env:REGION}
  stage: ${opt:stage, 'default'}
  memorySize: 512
  timeout: ${env:TIMEOUT}
  logRetentionInDays: ${env:LOGS_RETENTION_DAYS}
  stackTags: ${self:custom.serviceTags}


  environment:
    DYNAMODB_TABLE: table_test  # ðŸ”¹ Variable de entorno para DynamoDB

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - !GetAtt table_test.Arn  # ðŸ”¹ Permisos para la tabla DynamoDB


resources:
  Resources:
    iamRolLambda: ${file(infrastructure/iam/lambda/iamRolLambda.yaml):iamRolLambda}
    iamRolAuthorizer: ${file(infrastructure/iam/lambda/iamRolAuthorizer.yaml):iamRolAuthorizer}


  # ðŸ”¹ DefiniciÃ³n de la tabla DynamoDB
    FacebookEvents:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: table_test
        AttributeDefinitions:
          - AttributeName: message_id
            AttributeType: S
        KeySchema:
          - AttributeName: message_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

functions:
  - ${file(infrastructure/lambdas/funcion.yaml)} 
  - ${file(infrastructure/lambdas/authorizer.yaml)} 